/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/src/icons.glb --output models/1024/Icons.tsx -r public/models1024 --transform -t --resolution 1024 --keepmaterials -m --keepmeshes --keepnames -s 
Files: ./public/models/src/icons.glb [35.75MB] > C:\Users\Tommy\Documents\GitHub\frederic-cartier\models\1024\models/1024/icons-transformed.glb [463.22KB] (99%)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'; import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube011: THREE.Mesh
    Cylinder007: THREE.Mesh
    Cylinder009: THREE.Mesh
    reelR: THREE.Mesh
    reelF002: THREE.Mesh
    reelF001: THREE.Mesh
    reelF: THREE.Mesh
    reelF003: THREE.Mesh
    reelF004: THREE.Mesh
    reelF005: THREE.Mesh
    reelF006: THREE.Mesh
    reelsMount: THREE.Mesh
    bodyBtnTop: THREE.Mesh
    bodyBtnBottom: THREE.Mesh
    bodyBtnMid: THREE.Mesh
    bodyPanel: THREE.Mesh
    body: THREE.Mesh
    bodyMount: THREE.Mesh
    bodyMountCylinder: THREE.Mesh
    Cylinder003: THREE.Mesh
    Cylinder005: THREE.Mesh
    Cylinder006: THREE.Mesh
    Cylinder008: THREE.Mesh
    Cylinder004: THREE.Mesh
    Cube: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube012: THREE.Mesh
  }
  materials: {
    black: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/../../models/1024/models/1024/icons-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh name="Cube001" castShadow receiveShadow geometry={nodes.Cube001.geometry} material={materials.black} position={[0.725, 0.092, 0]} userData={{ name: 'Cube.001' }} />
      <mesh name="Cube002" castShadow receiveShadow geometry={nodes.Cube002.geometry} material={materials.black} position={[0.852, 0.092, 0]} userData={{ name: 'Cube.002' }} />
      <mesh name="Cube003" castShadow receiveShadow geometry={nodes.Cube003.geometry} material={materials.black} position={[0.99, 0.092, 0]} userData={{ name: 'Cube.003' }} />
      <mesh name="Cube006" castShadow receiveShadow geometry={nodes.Cube006.geometry} material={materials.black} position={[1.126, 0.092, 0]} userData={{ name: 'Cube.006' }} />
      <mesh name="Cube007" castShadow receiveShadow geometry={nodes.Cube007.geometry} material={materials.black} position={[-0.853, 0.246, 0]} userData={{ name: 'Cube.007' }} />
      <mesh name="Cube008" castShadow receiveShadow geometry={nodes.Cube008.geometry} material={materials.black} position={[-1.113, 0.246, 0]} userData={{ name: 'Cube.008' }} />
      <mesh name="Cube009" castShadow receiveShadow geometry={nodes.Cube009.geometry} material={materials.black} position={[1.199, -0.384, 0]} userData={{ name: 'Cube.009' }} />
      <mesh name="Cube010" castShadow receiveShadow geometry={nodes.Cube010.geometry} material={materials.black} position={[1.199, -0.236, 0]} userData={{ name: 'Cube.010' }} />
      <mesh name="Cube011" castShadow receiveShadow geometry={nodes.Cube011.geometry} material={materials.black} position={[1.397, -0.236, 0]} userData={{ name: 'Cube.011' }} />
      <mesh name="Cylinder007" castShadow receiveShadow geometry={nodes.Cylinder007.geometry} material={materials.black} position={[1.045, -0.303, 0]} rotation={[-Math.PI, -Math.PI / 2, 0]} userData={{ name: 'Cylinder.007' }} />
      <mesh name="Cylinder009" castShadow receiveShadow geometry={nodes.Cylinder009.geometry} material={materials.black} position={[1.187, -0.084, 0]} rotation={[-Math.PI, -Math.PI / 2, 0]} userData={{ name: 'Cylinder.009' }} />
      <mesh name="reelR" castShadow receiveShadow geometry={nodes.reelR.geometry} material={materials.black} position={[-0.789, 1.082, 0]} scale={[1, 1, 1.12]} userData={{ name: 'reelR' }} />
      <mesh name="reelF002" castShadow receiveShadow geometry={nodes.reelF002.geometry} material={materials.black} position={[-0.79, 1.082, 0]} scale={[1, 1, 0.475]} userData={{ name: 'reelF.002' }} />
      <mesh name="reelF001" castShadow receiveShadow geometry={nodes.reelF001.geometry} material={materials.black} position={[0.269, 1.082, 0]} scale={[1, 1, 0.555]} userData={{ name: 'reelF.001' }} />
      <mesh name="reelF" castShadow receiveShadow geometry={nodes.reelF.geometry} material={materials.black} position={[0.269, 1.082, 0]} scale={[1, 1, 1.2]} userData={{ name: 'reelF' }} />
      <mesh name="reelF003" castShadow receiveShadow geometry={nodes.reelF003.geometry} material={materials.black} position={[-0.79, 1.082, 0]} scale={[1, 1, 0.431]} userData={{ name: 'reelF.003' }} />
      <mesh name="reelF004" castShadow receiveShadow geometry={nodes.reelF004.geometry} material={materials.black} position={[0.269, 1.082, 0]} scale={[1, 1, 0.493]} userData={{ name: 'reelF.004' }} />
      <mesh name="reelF005" castShadow receiveShadow geometry={nodes.reelF005.geometry} material={materials.black} position={[-0.608, 0.72, 0]} scale={[0.864, 0.864, 0.431]} userData={{ name: 'reelF.005' }} />
      <mesh name="reelF006" castShadow receiveShadow geometry={nodes.reelF006.geometry} material={materials.black} position={[-0.608, 0.72, 0]} scale={[1.838, 1.838, 0.37]} userData={{ name: 'reelF.006' }} />
      <mesh name="reelsMount" castShadow receiveShadow geometry={nodes.reelsMount.geometry} material={materials.black} position={[-0.114, 0.093, 0]} scale={[1, 1, 0.9]} userData={{ name: 'reelsMount' }} />
      <mesh name="bodyBtnTop" castShadow receiveShadow geometry={nodes.bodyBtnTop.geometry} material={materials.black} position={[-0.616, 0.253, 0]} userData={{ name: 'bodyBtnTop' }} />
      <mesh name="bodyBtnBottom" castShadow receiveShadow geometry={nodes.bodyBtnBottom.geometry} material={materials.black} position={[-0.633, -0.211, 0]} userData={{ name: 'bodyBtnBottom' }} />
      <mesh name="bodyBtnMid" castShadow receiveShadow geometry={nodes.bodyBtnMid.geometry} material={materials.black} position={[-0.658, -0.01, 0]} userData={{ name: 'bodyBtnMid' }} />
      <mesh name="bodyPanel" castShadow receiveShadow geometry={nodes.bodyPanel.geometry} material={materials.black} position={[0.113, -0.007, 0]} scale={[0.396, 0.539, 1.078]} userData={{ name: 'bodyPanel' }} />
      <mesh name="body" castShadow receiveShadow geometry={nodes.body.geometry} material={materials.black} userData={{ name: 'body' }} />
      <mesh name="bodyMount" castShadow receiveShadow geometry={nodes.bodyMount.geometry} material={materials.black} position={[0.015, -0.533, 0]} userData={{ name: 'bodyMount' }} />
      <mesh name="bodyMountCylinder" castShadow receiveShadow geometry={nodes.bodyMountCylinder.geometry} material={materials.black} position={[-0.298, -0.556, 0]} userData={{ name: 'bodyMountCylinder' }} />
      <mesh name="Cylinder003" castShadow receiveShadow geometry={nodes.Cylinder003.geometry} material={materials.black} position={[0.065, -1.098, 0]} rotation={[Math.PI / 2, 0, 0]} userData={{ name: 'Cylinder.003' }} />
      <mesh name="Cylinder005" castShadow receiveShadow geometry={nodes.Cylinder005.geometry} material={materials.black} position={[-0.352, -0.914, 0]} rotation={[-Math.PI, -Math.PI / 2, 0]} userData={{ name: 'Cylinder.005' }} />
      <mesh name="Cylinder006" castShadow receiveShadow geometry={nodes.Cylinder006.geometry} material={materials.black} position={[-0.783, -0.914, 0]} rotation={[-Math.PI, -Math.PI / 2, 0]} userData={{ name: 'Cylinder.006' }} />
      <mesh name="Cylinder008" castShadow receiveShadow geometry={nodes.Cylinder008.geometry} material={materials.black} position={[0.063, -0.65, 0]} userData={{ name: 'Cylinder.008' }} />
      <mesh name="Cylinder004" castShadow receiveShadow geometry={nodes.Cylinder004.geometry} material={materials.black} position={[0.065, -0.824, 0.16]} userData={{ name: 'Cylinder.004' }} />
      <mesh name="Cube" castShadow receiveShadow geometry={nodes.Cube.geometry} material={materials.black} position={[-0.374, 1.069, 0.079]} scale={[0.25, 0.025, 0.025]} userData={{ name: 'Cube' }} />
      <mesh name="Cube004" castShadow receiveShadow geometry={nodes.Cube004.geometry} material={materials.black} position={[-0.789, 1.497, 0.079]} rotation={[0, 0, -Math.PI / 2]} scale={[0.25, 0.025, 0.025]} userData={{ name: 'Cube.004' }} />
      <mesh name="Cube005" castShadow receiveShadow geometry={nodes.Cube005.geometry} material={materials.black} position={[0.269, 1.497, 0.079]} rotation={[0, 0, -Math.PI / 2]} scale={[0.25, 0.025, 0.025]} userData={{ name: 'Cube.005' }} />
      <mesh name="Cube012" castShadow receiveShadow geometry={nodes.Cube012.geometry} material={materials.black} position={[0.683, 1.069, 0.079]} scale={[1, 0.5, 0.5]} userData={{ name: 'Cube.012' }} />
    </group>
  )
}

useGLTF.preload('/../../models/1024/models/1024/icons-transformed.glb')
